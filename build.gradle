buildscript {
  repositories {
      mavenCentral()
//      maven { url this.properties['internalArtifactory.mavenCentral'] }
  }
  dependencies {
      classpath 'net.researchgate:gradle-release:2.1.1'
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'osgi'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'net.researchgate.release'

group = 'org.openmucextensions'

sourceCompatibility = 1.7
targetCompatibility = 1.7

// configure the release plugin
release {
  git {
    requireBranch = ''
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  flatDir {
    name 'additionalLibraries'
    dirs rootDir.getAbsolutePath() + '/lib'
  }
  
//  maven { url this.properties['internalArtifactory.thirdparty'] }
//  maven { url this.properties['internalArtifactory.mavenCentral'] }
}

configurations.create('embed')
configurations.compile.extendsFrom configurations.embed

dependencies {
  def openmucversion = '0.15.2'

  compile group: 'org.osgi', name: 'osgi_R4_compendium', version: '1.0'
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1'
  compile group: 'org.openmuc.framework', name: 'openmuc-core-spi', version: openmucversion
  compile group: 'org.openmuc.framework', name: 'openmuc-core-api', version: openmucversion
  
  embed group: 'com.serotonin', name: 'BACnet4J', version: '3.2.3-siemens1'
  embed group: 'com.google.guava', name: 'guava', version: '18.0'
  
  compile 'org.apache.commons:commons-lang3:3.4'
  
  testCompile group: 'junit', name: 'junit', version: '4.11'
  // this is for log message output on the console
  testCompile 'org.slf4j:slf4j-simple:1.7.12'
}

jar {
  manifest {
    name = "OpenMUC-Extensions Driver - BACnet"
    instruction 'Bundle-ClassPath', '.'
    configurations.embed.each { f ->
      instruction 'Bundle-ClassPath', "lib/$f.name"
    }
    instruction 'Export-Package', ''
    instruction 'Import-Package', '!com.serotonin*'
    instruction 'Import-Package', '!org.apache.commons*'
    instruction 'Import-Package', '!com.google.common*'
    instruction 'Import-Package', '*'
    instruction 'Service-Component', 'OSGI-INF/components.xml'
  }
}

jar {
  into('lib') {
    from configurations.embed
  }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}
